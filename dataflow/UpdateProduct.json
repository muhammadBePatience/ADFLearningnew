{
	"name": "UpdateProduct",
	"properties": {
		"folder": {
			"name": "Chapter7"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Sales_DataSet",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Product_DataSet",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Product_DataSet",
						"type": "DatasetReference"
					},
					"name": "FinalInsert"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "ProductAggregate"
				},
				{
					"name": "NewRowsOnly"
				}
			],
			"script": "source(output(\n\t\tRowId as integer,\n\t\tRetailer as string,\n\t\tSalesMonth as date,\n\t\tProduct as string,\n\t\tSalesValueUSD as decimal(19,2),\n\t\tUnitsSold as integer,\n\t\tRunSeqNo as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tProduct as string,\n\t\tProductName as string,\n\t\tWeightInOunces as decimal(19,2),\n\t\tWeightInGrams as decimal(19,2)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1 derive(ProductName = trim(left(Product, length(Product) - length(:WeightString))),\n\t\tWeightInOunces = toFloat(replace(:WeightString,:WeightUnit,'')) / iif(:WeightUnit == 'g', 28.945,1.0),\n\t\tWeightInGrams = toFloat(replace(:WeightString,:WeightUnit,'')) * iif(:WeightUnit == 'oz', 28.3495,1.0),\n\t\tWeightUnit = :WeightUnit,\n\t\tWeightString := right(Product, locate(' ', reverse(Product))-1),\n\t\tWeightUnit := iif(endsWith(Product, 'oz'),'oz','g'),\n\tpartitionBy('hash', 1)) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(Product),\n\tProductName = first(ProductName),\n\t\teach(match(startsWith(name,'Weight')), $$ = first($$))) ~> ProductAggregate\nProductAggregate, source2 exists(ProductAggregate@Product == source2@Product,\n\tnegate:true,\n\tbroadcast: 'auto')~> NewRowsOnly\nNewRowsOnly sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tProduct as string,\n\t\tProductName as string,\n\t\tWeightInOunces as decimal(19,2),\n\t\tWeightInGrams as decimal(19,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tProduct,\n\t\tProductName,\n\t\tWeightInOunces,\n\t\tWeightInGrams\n\t)) ~> FinalInsert"
		}
	}
}